---
name: Linux Clang
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
env:
  CMAKE_CXX_STANDARD: 20
  CMAKE_VERBOSE_MAKEFILE: ON
jobs:
  linux-clang:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        clang-version: [14, 15, 16, 17, 18]
        build-type: [Debug, Release]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Clang ${{ matrix.clang-version }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang-${{ matrix.clang-version }} \
            libc++-${{ matrix.clang-version }}-dev \
            libc++abi-${{ matrix.clang-version }}-dev
          echo "CC=clang-${{ matrix.clang-version }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ matrix.clang-version }}" >> $GITHUB_ENV
      - name: Install MPI
        run: |
          case "${{ matrix.clang-version }}" in
            14)
              sudo apt-get install -y libopenmpi-dev openmpi-bin
              echo "MPI_TYPE=OpenMPI" >> $GITHUB_ENV
              ;;
            15|16|17)
              sudo apt-get install -y libmpich-dev mpich
              echo "MPI_TYPE=MPICH" >> $GITHUB_ENV
              ;;
            18)
              wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \
                | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
              echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] \
                https://apt.repos.intel.com/oneapi all main" | \
                sudo tee /etc/apt/sources.list.d/oneAPI.list
              sudo apt-get update
              sudo apt-get install -y intel-oneapi-mpi-devel
              echo "MPI_TYPE=IntelMPI" >> $GITHUB_ENV
              ;;
          esac
      - name: Configure CMake
        run: |
          if [[ "${{ matrix.clang-version }}" -eq 18 ]]; then
            source /opt/intel/oneapi/setvars.sh
          fi

          echo "MPI_TYPE: $MPI_TYPE"
          echo "CXX: $CXX"

          CMAKE_ARGS="-DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
            -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_CXX_COMPILER=$CXX \
            -DDYNAMPI_BUILD_TESTS=ON \
            -DDYNAMPI_BUILD_BENCHMARKS=ON \
            -DMPI_C_COMPILER=$CC \
            -DMPI_CXX_COMPILER=$CXX"

          # Only IntelMPI supports libc++ reliably
          if [[ "$MPI_TYPE" == "IntelMPI" ]]; then
            CMAKE_ARGS="$CMAKE_ARGS \
              -DCMAKE_CXX_FLAGS='-stdlib=libc++' \
              -DCMAKE_EXE_LINKER_FLAGS='-stdlib=libc++' \
              -DCMAKE_MODULE_LINKER_FLAGS='-stdlib=libc++'"
          fi

          eval "cmake -B build $CMAKE_ARGS"
      - name: Build
        run: |
          if [[ "${{ matrix.clang-version }}" -eq 18 ]]; then
            source /opt/intel/oneapi/setvars.sh
          fi
          cmake --build build --config ${{ matrix.build-type }} --parallel
      - name: Test
        run: |
          if [[ "${{ matrix.clang-version }}" -eq 18 ]]; then
            source /opt/intel/oneapi/setvars.sh
          fi
          cd build
          echo "Testing with $MPI_TYPE"
          ctest --output-on-failure --parallel -C ${{ matrix.build-type }}

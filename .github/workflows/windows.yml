---
name: Windows CI
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
env:
  CMAKE_CXX_STANDARD: 20
  CMAKE_VERBOSE_MAKEFILE: "ON"
jobs:
  windows-msvc:
    name: Windows MSVC
    runs-on: windows-latest
    strategy:
      matrix:
        build-type: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - name: Install Microsoft MPI
        shell: pwsh
        run: |
          $urlBase = "https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623"
          Invoke-WebRequest "$urlBase/msmpisetup.exe" -OutFile "msmpisetup.exe"
          Start-Process "msmpisetup.exe" -ArgumentList "-unattend" -Wait
          Invoke-WebRequest "$urlBase/msmpisdk.msi" -OutFile "msmpisdk.msi"
          Start-Process "msiexec.exe" -ArgumentList "/i", "msmpisdk.msi", "/quiet" -Wait

          # Set MPI env vars
          echo "MSMPI_BIN=C:\Program Files\Microsoft MPI\Bin" >> $env:GITHUB_ENV
          echo "MSMPI_INC=C:\Program Files (x86)\Microsoft SDKs\MPI\Include" >> $env:GITHUB_ENV
          echo "MSMPI_LIB64=C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64" >> $env:GITHUB_ENV
          echo "MPI_TYPE=Microsoft MPI (MSVC)" >> $env:GITHUB_ENV
      - name: Configure CMake (MSVC)
        shell: pwsh
        run: |
          cmake -B build `
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} `
            -DMPI_CXX_INCLUDE_PATH="$env:MSMPI_INC" `
            -DMPI_CXX_LIBRARIES="$env:MSMPI_LIB64\msmpi.lib" `
            -DMPIEXEC_EXECUTABLE="$env:MSMPI_BIN\mpiexec.exe" `
            -DDYNAMPI_BUILD_TESTS=ON `
            -DDYNAMPI_BUILD_BENCHMARKS=ON
      - name: Build (MSVC)
        shell: pwsh
        run: cmake --build build --config ${{ matrix.build-type }} --parallel
      - name: Test (MSVC)
        shell: pwsh
        run: |
          cd build
          echo "Testing with $env:MPI_TYPE"
          ctest --output-on-failure --parallel -C ${{ matrix.build-type }}
  windows-mingw:
    name: Windows MinGW
    runs-on: windows-latest
    strategy:
      matrix:
        build-type: [Debug, Release]
    steps:
      - uses: actions/checkout@v4
      - name: Install MinGW & Dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-make mingw-w64-x86_64-msmpi
            mingw-w64-x86_64-binutils mingw-w64-x86_64-tools

      - name: Install MS-MPI Runtime (for mpiexec)
        shell: pwsh
        run: |
          Invoke-WebRequest `
            "https://download.microsoft.com/download/a/5/2/a5207ca5-1203-491a-8fb8-906fd68ae623/msmpisetup.exe" `
            -OutFile "msmpisetup.exe"
          Start-Process -FilePath "msmpisetup.exe" -ArgumentList "-unattend" -Wait
          echo "MPI_TYPE=Microsoft MPI (MinGW)" >> $env:GITHUB_ENV
      - name: Generate libmsmpi.a for MinGW
        shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH:/c/Program Files/Microsoft MPI/Bin"

          echo "Checking gendef availability..."
          which gendef || { echo "gendef not found in PATH"; exit 1; }

          cd /tmp
          cp "/c/Windows/System32/msmpi.dll" . || cp "/c/Program Files/Microsoft MPI/Bin/msmpi.dll" .

          gendef msmpi.dll
          dlltool -d msmpi.def -l libmsmpi.a -D msmpi.dll
          cp libmsmpi.a /mingw64/lib/
      - name: Configure CMake (MinGW)
        shell: msys2 {0}
        run: |
          cmake -B build \
            -G "MinGW Makefiles" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_CXX_COMPILER=g++ \
            -DMPIEXEC_EXECUTABLE="/c/Program Files/Microsoft MPI/Bin/mpiexec.exe" \
            -DMPI_C_INCLUDE_PATH=/mingw64/include \
            -DMPI_CXX_INCLUDE_PATH=/mingw64/include \
            -DMPI_C_LIBRARIES=/mingw64/lib/libmsmpi.a \
            -DMPI_CXX_LIBRARIES=/mingw64/lib/libmsmpi.a \
            -DDYNAMPI_BUILD_TESTS=ON \
            -DDYNAMPI_BUILD_BENCHMARKS=ON
      - name: Build (MinGW)
        shell: msys2 {0}
        run: cmake --build build --config ${{ matrix.build-type }} --parallel
      - name: Test (MinGW)
        shell: msys2 {0}
        run: |
          cd build
          echo "Testing with $MPI_TYPE"
          ctest --output-on-failure --parallel -C ${{ matrix.build-type }}
